#!/usr/bin/env bash
{{/* vim:set ft=sh: */}}
set -euo pipefail

function _command_exists() {
  command -v "${*}" &> /dev/null
}

function _blue() {
  printf "\e[34m%s\033[0m\n" "${*}"
}

function _chezmoiprint() {
  _blue "###############################################################################"
  _blue "CHEZMOI - ${*}"
  _blue "###############################################################################"
}

################################################################################

_chezmoiprint "Default packages installation"

{{- /* find out if extras packages must be installed: for now, only true if we
       are NOT running in WSL */}}
{{- $is_wsl := and (eq .chezmoi.os "linux")
                   (.chezmoi.kernel.osrelease | lower | contains "microsoft") }}
{{- $install_extras := not $is_wsl }}


################################################################################
# APT
################################################################################
{{- $apt_pkgs := .apt.base }}
{{- if and .apt.extras $install_extras }}
  {{- $apt_pkgs = concat $apt_pkgs .apt.extras }}
{{- end }}
{{- if $apt_pkgs }}
if _command_exists apt;
then
  sudo apt install --yes {{ range $apt_pkgs }}{{ . }} {{ end }}
fi
{{- end }}


################################################################################
# BREW
################################################################################
{{- $brew_pkgs := .brew.base }}
{{- if and .brew.extras $install_extras }}
  {{- $brew_pkgs = concat $brew_pkgs .brew.extras }}
{{- end }}
{{- if $brew_pkgs }}
# Source the output of 'brew shellenv' in case we don't have brew environment
# vaariables set up yet. This typically happens on first setup.
_brewbin="/home/linuxbrew/.linuxbrew/bin/brew"
if ! [ -f ${_brewbin} ];
then
  echo "Did not find brew executable in '${_brewbin}'!"
  exit 1
fi
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
brew install --quiet {{ range $brew_pkgs }}{{ . }} {{ end }}
{{- end }}


################################################################################
# FLATPAK
################################################################################
{{- $flatpak_pkgs := .flatpak.base }}
{{- if and .flatpak.extras $install_extras }}
  {{- $flatpak_pkgs = concat $flatpak_pkgs .flatpak.extras }}
{{- end }}
{{- if $flatpak_pkgs }}
flatpak install --assumeyes {{ range $flatpak_pkgs }}{{ . }} {{ end }}
{{- end }}


################################################################################
# PYTHON (pip & pipx)
################################################################################
{{- if .python.pip }}
python3 -m pip install --user {{ range .python.pip }}{{ . }} {{ end }}
{{- end }}

{{- if .python.tool }}
# install python tools (executable)
  {{- range .python.tool }}
uv tool install \
  {{if hasKey . "python"}}--python {{.python}}{{end}} \
  {{if hasKey . "deps"}}{{range .deps}}--with {{.}} {{end}}{{end}} \
  {{.pkg}}{{if hasKey . "opt"}}{{.opt}}{{end}}
  {{- end }}
{{- end }}

################################################################################
# NODE
################################################################################
{{- if .node.npm }}
npm install -g {{range .node.npm}}{{ . }} {{end}}
{{- end }}

# TODO: find a way to install nerdfonts decently
